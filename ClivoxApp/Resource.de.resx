<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="client_FirstName" xml:space="preserve">
    <value>Vorname</value>
  </data>
  <data name="client_LastName" xml:space="preserve">
    <value>Nachname</value>
  </data>
  <data name="client_Gender" xml:space="preserve">
    <value>Geschlecht</value>
  </data>
  <data name="client_GenderMale" xml:space="preserve">
    <value>Männlich</value>
  </data>
  <data name="client_GenderFemale" xml:space="preserve">
    <value>Weiblich</value>
  </data>
  <data name="client_PhoneNumber" xml:space="preserve">
    <value>Telefonnummer</value>
  </data>
  <data name="client_Email" xml:space="preserve">
    <value>E-Mail</value>
  </data>
  <data name="client_Address" xml:space="preserve">
    <value>Adresse</value>
  </data>
  <data name="client_Address_CompanyOrPerson" xml:space="preserve">
    <value>Firma oder Person</value>
  </data>
  <data name="client_Address_Street" xml:space="preserve">
    <value>Straße</value>
  </data>
  <data name="client_Address_PostalCode" xml:space="preserve">
    <value>Postleitzahl</value>
  </data>
  <data name="client_Address_City" xml:space="preserve">
    <value>Stadt</value>
  </data>
  <data name="client_Address_Country" xml:space="preserve">
    <value>Land</value>
  </data>
  <data name="country_Germany" xml:space="preserve">
    <value>Deutschland</value>
  </data>
  <data name="country_Austria" xml:space="preserve">
    <value>Österreich</value>
  </data>
  <data name="country_Belgium" xml:space="preserve">
    <value>Belgien</value>
  </data>
  <data name="country_CzechRepublic" xml:space="preserve">
    <value>Tschechien</value>
  </data>
  <data name="country_Denmark" xml:space="preserve">
    <value>Dänemark</value>
  </data>
  <data name="country_France" xml:space="preserve">
    <value>Frankreich</value>
  </data>
  <data name="country_Luxembourg" xml:space="preserve">
    <value>Luxemburg</value>
  </data>
  <data name="country_Netherlands" xml:space="preserve">
    <value>Niederlande</value>
  </data>
  <data name="country_Poland" xml:space="preserve">
    <value>Polen</value>
  </data>
  <data name="country_Switzerland" xml:space="preserve">
    <value>Schweiz</value>
  </data>
  <data name="client_CompanyName" xml:space="preserve">
    <value>Firmenname</value>
  </data>
  <data name="client_IsCompany" xml:space="preserve">
    <value>Firma?</value>
  </data>
  <data name="invoice_InvoiceNumber" xml:space="preserve">
    <value>Rechnungsnummer</value>
  </data>
  <data name="invoice_InvoiceDate" xml:space="preserve">
    <value>Rechnungsdatum</value>
  </data>
  <data name="invoice_DueDate" xml:space="preserve">
    <value>Fälligkeitsdatum</value>
  </data>
  <data name="invoice_ServiceDate" xml:space="preserve">
    <value>Leistungsdatum</value>
  </data>
  <data name="jobs_AddInvoice" xml:space="preserve">
    <value>Rechnung hinzufügen</value>
  </data>
  <data name="jobs_NewInvoice" xml:space="preserve">
    <value>Neue Rechnung</value>
  </data>
  <data name="jobs_EditInvoice" xml:space="preserve">
    <value>Rechnung bearbeiten</value>
  </data>
  <data name="jobs_ClientLoading" xml:space="preserve">
    <value>Kunde wird geladen...</value>
  </data>
  <data name="jobs_ClientUnknown" xml:space="preserve">
    <value>Unbekannter Kunde</value>
  </data>
  <data name="jobs_Total" xml:space="preserve">
    <value>Gesamt</value>
  </data>
  <data name="jobs_Items" xml:space="preserve">
    <value>Positionen</value>
  </data>
  <data name="jobs_ExportToExcel" xml:space="preserve">
    <value>Export nach Excel</value>
  </data>
  <data name="editInvoiceDialog_Title" xml:space="preserve">
    <value>Rechnung bearbeiten/Hinzufügen</value>
  </data>
  <data name="editInvoiceDialog_InvoiceItems" xml:space="preserve">
    <value>Rechnungspositionen</value>
  </data>
  <data name="editInvoiceDialog_PerHour" xml:space="preserve">
    <value>Pro Stunde</value>
  </data>
  <data name="editInvoiceDialog_Description" xml:space="preserve">
    <value>Beschreibung</value>
  </data>
  <data name="editInvoiceDialog_Hours" xml:space="preserve">
    <value>Stunden</value>
  </data>
  <data name="editInvoiceDialog_PricePerHour" xml:space="preserve">
    <value>Preis/Stunde</value>
  </data>
  <data name="editInvoiceDialog_Total" xml:space="preserve">
    <value>Gesamt</value>
  </data>
  <data name="editInvoiceDialog_PerSquareMeter" xml:space="preserve">
    <value>Pro Quadratmeter</value>
  </data>
  <data name="editInvoiceDialog_Area" xml:space="preserve">
    <value>Fläche (m²)</value>
  </data>
  <data name="editInvoiceDialog_PricePerSquareMeter" xml:space="preserve">
    <value>Preis/m²</value>
  </data>
  <data name="editInvoiceDialog_FixedPrice" xml:space="preserve">
    <value>Festpreis</value>
  </data>
  <data name="editInvoiceDialog_FixedAmount" xml:space="preserve">
    <value>Festbetrag</value>
  </data>
  <data name="editInvoiceDialog_PerObject" xml:space="preserve">
    <value>Pro Objekt</value>
  </data>
  <data name="editInvoiceDialog_Objects" xml:space="preserve">
    <value>Objekte</value>
  </data>
  <data name="editInvoiceDialog_PricePerObject" xml:space="preserve">
    <value>Preis/Objekt</value>
  </data>
  <data name="editInvoiceDialog_Save" xml:space="preserve">
    <value>Speichern</value>
  </data>
  <data name="editInvoiceDialog_Cancel" xml:space="preserve">
    <value>Abbrechen</value>
  </data>
  <data name="businessOwner_Button" xml:space="preserve">
    <value>Geschäftsinhaber</value>
  </data>
  <data name="home_SearchClients" xml:space="preserve">
    <value>Kunden suchen...</value>
  </data>
  <!-- Expense Proof Files Section -->
  <data name="expenseProofFiles_Title" xml:space="preserve">
    <value>Ausgabenbelege</value>
  </data>
  <data name="expenseProofFiles_UploadButton" xml:space="preserve">
    <value>Belege hochladen</value>
  </data>
  <data name="expenseProofFiles_SupportedFormats" xml:space="preserve">
    <value>Unterstützt: PDF, Bilder (JPG, PNG), Word, Excel-Dateien</value>
  </data>
  <data name="expenseProofFiles_AttachedFiles" xml:space="preserve">
    <value>Angehängte Dateien:</value>
  </data>
  <data name="expenseProofFiles_NoFiles" xml:space="preserve">
    <value>Keine Ausgabenbelege angehängt. Laden Sie Dateien hoch, um Ihre Ausgaben zu dokumentieren.</value>
  </data>
  <data name="expenseProofFiles_TotalAmount" xml:space="preserve">
    <value>Gesamtausgabenbetrag:</value>
  </data>
  <data name="expenseProofFiles_EditDetails" xml:space="preserve">
    <value>Details bearbeiten</value>
  </data>
  <data name="expenseProofFiles_DownloadFile" xml:space="preserve">
    <value>Datei herunterladen</value>
  </data>
  <data name="expenseProofFiles_RemoveFile" xml:space="preserve">
    <value>Datei entfernen</value>
  </data>
  <!-- File Details Dialog -->
  <data name="fileDetailsDialog_Title" xml:space="preserve">
    <value>Dateidetails bearbeiten</value>
  </data>
  <data name="fileDetailsDialog_AddTitle" xml:space="preserve">
    <value>Dateidetails hinzufügen</value>
  </data>
  <data name="fileDetailsDialog_FileDescription" xml:space="preserve">
    <value>Dateibeschreibung</value>
  </data>
  <data name="fileDetailsDialog_DescriptionPlaceholder" xml:space="preserve">
    <value>Geben Sie eine Beschreibung für diese Ausgabenbeleg-Datei ein...</value>
  </data>
  <data name="fileDetailsDialog_DescriptionHelper" xml:space="preserve">
    <value>Beschreiben Sie, was diese Ausgabenbeleg-Datei enthält (z.B. 'Restaurantrechnung für Kundenessen', 'Tankstellenrechnung für Projektreise')</value>
  </data>
  <data name="fileDetailsDialog_ExpenseAmount" xml:space="preserve">
    <value>Ausgabenbetrag (€)</value>
  </data>
  <data name="fileDetailsDialog_AmountHelper" xml:space="preserve">
    <value>Geben Sie den in dieser Datei dokumentierten Gesamtausgabenbetrag ein</value>
  </data>
  <data name="fileDetailsDialog_Tip" xml:space="preserve">
    <value>💡 Tipp: Das Hinzufügen von Beschreibung und Betrag hilft Ihnen, Ausgaben besser zu verfolgen und macht die Rechnungsverwaltung einfacher.</value>
  </data>
  <data name="fileDetailsDialog_Save" xml:space="preserve">
    <value>Details speichern</value>
  </data>
  <data name="fileDetailsDialog_Skip" xml:space="preserve">
    <value>Überspringen (Später hinzufügen)</value>
  </data>
  <data name="fileDetailsDialog_FileUploadedSuccess" xml:space="preserve">
    <value>Datei erfolgreich hochgeladen! Bitte fügen Sie unten Details hinzu:</value>
  </data>
  <!-- Jobs Messages -->
  <data name="jobs_Expenses" xml:space="preserve">
    <value>Ausgaben</value>
  </data>
  <data name="jobs_Attachments" xml:space="preserve">
    <value>Anhänge</value>
  </data>
  <data name="jobs_InvoiceUpdatedSuccess" xml:space="preserve">
    <value>Rechnungsdaten aktualisiert</value>
  </data>
  <data name="jobs_ExpenseFilesUpdatedSuccess" xml:space="preserve">
    <value>Ausgabenbelege aktualisiert</value>
  </data>
  <data name="jobs_NoChangesDetected" xml:space="preserve">
    <value>Keine Änderungen erkannt. Rechnung wurde nicht aktualisiert.</value>
  </data>
  <data name="jobs_UpdatedSuccessfully" xml:space="preserve">
    <value>erfolgreich.</value>
  </data>
  <!-- File Upload Messages -->
  <data name="fileUpload_FileTooLarge" xml:space="preserve">
    <value>Datei {0} ist zu groß. Maximale Größe beträgt 10 MB.</value>
  </data>
  <data name="fileUpload_SuccessWithDetails" xml:space="preserve">
    <value>Datei erfolgreich mit Details hochgeladen.</value>
  </data>
  <data name="fileUpload_SuccessAddLater" xml:space="preserve">
    <value>Datei hochgeladen. Sie können Details später hinzufügen, indem Sie auf die Bearbeiten-Schaltfläche klicken.</value>
  </data>
  <data name="fileUpload_Error" xml:space="preserve">
    <value>Fehler beim Hochladen der Dateien: {0}</value>
  </data>
  <data name="fileUpload_RemoveSuccess" xml:space="preserve">
    <value>Datei erfolgreich entfernt.</value>
  </data>
  <data name="fileUpload_DownloadSuccess" xml:space="preserve">
    <value>Datei erfolgreich heruntergeladen.</value>
  </data>
  <data name="fileUpload_DownloadError" xml:space="preserve">
    <value>Fehler beim Herunterladen der Datei: {0}</value>
  </data>
</root>