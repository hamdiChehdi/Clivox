<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="client_FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="client_LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="client_Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="client_GenderMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="client_GenderFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="client_CompanyName" xml:space="preserve">
    <value>Company Name</value>
  </data>
  <data name="client_IsCompany" xml:space="preserve">
    <value>Is Company?</value>
  </data>
  <data name="client_Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="client_PhoneNumber" xml:space="preserve">
    <value>Phone Number</value>
  </data>
  <data name="client_Address" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="client_Address_CompanyOrPerson" xml:space="preserve">
    <value>Company or Person</value>
  </data>
  <data name="client_Address_Street" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="client_Address_PostalCode" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="client_Address_City" xml:space="preserve">
    <value>City</value>
  </data>
  <data name="client_Address_Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="country_Germany" xml:space="preserve">
    <value>Germany</value>
  </data>
  <data name="country_Austria" xml:space="preserve">
    <value>Austria</value>
  </data>
  <data name="country_Belgium" xml:space="preserve">
    <value>Belgium</value>
  </data>
  <data name="country_CzechRepublic" xml:space="preserve">
    <value>Czech Republic</value>
  </data>
  <data name="country_Denmark" xml:space="preserve">
    <value>Denmark</value>
  </data>
  <data name="country_France" xml:space="preserve">
    <value>France</value>
  </data>
  <data name="country_Luxembourg" xml:space="preserve">
    <value>Luxembourg</value>
  </data>
  <data name="country_Netherlands" xml:space="preserve">
    <value>Netherlands</value>
  </data>
  <data name="country_Poland" xml:space="preserve">
    <value>Poland</value>
  </data>
  <data name="country_Switzerland" xml:space="preserve">
    <value>Switzerland</value>
  </data>
  <data name="invoice_InvoiceNumber" xml:space="preserve">
    <value>Invoice Number</value>
  </data>
  <data name="invoice_InvoiceDate" xml:space="preserve">
    <value>Invoice Date</value>
  </data>
  <data name="invoice_DueDate" xml:space="preserve">
    <value>Due Date</value>
  </data>
  <data name="invoice_ServiceDate" xml:space="preserve">
    <value>Service Date</value>
  </data>
  <data name="jobs_NewInvoice" xml:space="preserve">
    <value>New Invoice</value>
  </data>
  <data name="jobs_EditInvoice" xml:space="preserve">
    <value>Edit Invoice</value>
  </data>
  <data name="jobs_ClientLoading" xml:space="preserve">
    <value>Loading client...</value>
  </data>
  <data name="jobs_ClientUnknown" xml:space="preserve">
    <value>Unknown client</value>
  </data>
  <data name="jobs_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="jobs_Items" xml:space="preserve">
    <value>Items</value>
  </data>
  <data name="jobs_ExportToExcel" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="jobs_AddInvoice" xml:space="preserve">
    <value>Add invoice</value>
  </data>
  <data name="editInvoiceDialog_Title" xml:space="preserve">
    <value>Add/Edit Invoice</value>
  </data>
  <data name="editInvoiceDialog_InvoiceItems" xml:space="preserve">
    <value>Invoice Items</value>
  </data>
  <data name="editInvoiceDialog_PerHour" xml:space="preserve">
    <value>Per Hour</value>
  </data>
  <data name="editInvoiceDialog_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="editInvoiceDialog_Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="editInvoiceDialog_PricePerHour" xml:space="preserve">
    <value>Price/Hour</value>
  </data>
  <data name="editInvoiceDialog_Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="editInvoiceDialog_PerSquareMeter" xml:space="preserve">
    <value>Per Square Meter</value>
  </data>
  <data name="editInvoiceDialog_Area" xml:space="preserve">
    <value>Area (m²)</value>
  </data>
  <data name="editInvoiceDialog_PricePerSquareMeter" xml:space="preserve">
    <value>Price/m²</value>
  </data>
  <data name="editInvoiceDialog_FixedPrice" xml:space="preserve">
    <value>Fixed Price</value>
  </data>
  <data name="editInvoiceDialog_FixedAmount" xml:space="preserve">
    <value>Fixed Amount</value>
  </data>
  <data name="editInvoiceDialog_PerObject" xml:space="preserve">
    <value>Per Object</value>
  </data>
  <data name="editInvoiceDialog_Objects" xml:space="preserve">
    <value>Objects</value>
  </data>
  <data name="editInvoiceDialog_PricePerObject" xml:space="preserve">
    <value>Price/Object</value>
  </data>
  <data name="editInvoiceDialog_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="editInvoiceDialog_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="businessOwner_Button" xml:space="preserve">
    <value>Business Owner</value>
  </data>
  <data name="home_SearchClients" xml:space="preserve">
    <value>Search clients...</value>
  </data>
  <!-- Expense Proof Files Section -->
  <data name="expenseProofFiles_Title" xml:space="preserve">
    <value>Expense Proof Files</value>
  </data>
  <data name="expenseProofFiles_UploadButton" xml:space="preserve">
    <value>Upload Proof Files</value>
  </data>
  <data name="expenseProofFiles_SupportedFormats" xml:space="preserve">
    <value>Supported: PDF, Images (JPG, PNG), Word, Excel files</value>
  </data>
  <data name="expenseProofFiles_AttachedFiles" xml:space="preserve">
    <value>Attached Files:</value>
  </data>
  <data name="expenseProofFiles_NoFiles" xml:space="preserve">
    <value>No expense proof files attached. Upload files to provide documentation for your expenses.</value>
  </data>
  <data name="expenseProofFiles_TotalAmount" xml:space="preserve">
    <value>Total Expense Amount:</value>
  </data>
  <data name="expenseProofFiles_EditDetails" xml:space="preserve">
    <value>Edit details</value>
  </data>
  <data name="expenseProofFiles_DownloadFile" xml:space="preserve">
    <value>Download file</value>
  </data>
  <data name="expenseProofFiles_RemoveFile" xml:space="preserve">
    <value>Remove file</value>
  </data>
  <!-- File Details Dialog -->
  <data name="fileDetailsDialog_Title" xml:space="preserve">
    <value>Edit File Details</value>
  </data>
  <data name="fileDetailsDialog_AddTitle" xml:space="preserve">
    <value>Add File Details</value>
  </data>
  <data name="fileDetailsDialog_FileDescription" xml:space="preserve">
    <value>File Description</value>
  </data>
  <data name="fileDetailsDialog_DescriptionPlaceholder" xml:space="preserve">
    <value>Enter a description for this expense proof file...</value>
  </data>
  <data name="fileDetailsDialog_DescriptionHelper" xml:space="preserve">
    <value>Describe what this expense proof file contains (e.g., 'Restaurant receipt for client dinner', 'Gas station receipt for project travel')</value>
  </data>
  <data name="fileDetailsDialog_ExpenseAmount" xml:space="preserve">
    <value>Expense Amount (€)</value>
  </data>
  <data name="fileDetailsDialog_AmountHelper" xml:space="preserve">
    <value>Enter the total expense amount documented in this file</value>
  </data>
  <data name="fileDetailsDialog_Tip" xml:space="preserve">
    <value>💡 Tip: Adding description and amount helps you track expenses better and makes invoice management easier.</value>
  </data>
  <data name="fileDetailsDialog_Save" xml:space="preserve">
    <value>Save Details</value>
  </data>
  <data name="fileDetailsDialog_Skip" xml:space="preserve">
    <value>Skip (Add Later)</value>
  </data>
  <data name="fileDetailsDialog_FileUploadedSuccess" xml:space="preserve">
    <value>File uploaded successfully! Please add details below:</value>
  </data>
  <!-- Jobs Messages -->
  <data name="jobs_Expenses" xml:space="preserve">
    <value>Expenses</value>
  </data>
  <data name="jobs_Attachments" xml:space="preserve">
    <value>Attachments</value>
  </data>
  <data name="jobs_InvoiceUpdatedSuccess" xml:space="preserve">
    <value>Invoice data updated</value>
  </data>
  <data name="jobs_ExpenseFilesUpdatedSuccess" xml:space="preserve">
    <value>Expense proof files updated</value>
  </data>
  <data name="jobs_NoChangesDetected" xml:space="preserve">
    <value>No changes detected. Invoice was not updated.</value>
  </data>
  <data name="jobs_UpdatedSuccessfully" xml:space="preserve">
    <value>successfully.</value>
  </data>
  <!-- File Upload Messages -->
  <data name="fileUpload_FileTooLarge" xml:space="preserve">
    <value>File {0} is too large. Maximum size is 10 MB.</value>
  </data>
  <data name="fileUpload_SuccessWithDetails" xml:space="preserve">
    <value>Successfully uploaded file with details.</value>
  </data>
  <data name="fileUpload_SuccessAddLater" xml:space="preserve">
    <value>File uploaded. You can add details later by clicking the edit button.</value>
  </data>
  <data name="fileUpload_Error" xml:space="preserve">
    <value>Error uploading files: {0}</value>
  </data>
  <data name="fileUpload_RemoveSuccess" xml:space="preserve">
    <value>File removed successfully.</value>
  </data>
  <data name="fileUpload_DownloadSuccess" xml:space="preserve">
    <value>File downloaded successfully.</value>
  </data>
  <data name="fileUpload_DownloadError" xml:space="preserve">
    <value>Error downloading file: {0}</value>
  </data>
  <!-- Invoice Validation Messages -->
  <data name="mainLayout_Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="mainLayout_LockSession" xml:space="preserve">
    <value>Lock Session</value>
  </data>
  <data name="mainLayout_Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="mainLayout_AuthenticationError" xml:space="preserve">
    <value>Authentication Error</value>
  </data>
  <data name="mainLayout_Retry" xml:space="preserve">
    <value>Retry</value>
  </data>
  <data name="mainLayout_InitializingAuthentication" xml:space="preserve">
    <value>Initializing authentication...</value>
  </data>
  <data name="mainLayout_CheckingDatabase" xml:space="preserve">
    <value>Checking database connection and user credentials...</value>
  </data>
  <data name="mainLayout_TestLoginDialog" xml:space="preserve">
    <value>Test Login Dialog</value>
  </data>
  <data name="invoiceCard_NetTotal" xml:space="preserve">
    <value>Net Total</value>
  </data>
  <data name="invoiceCard_Issued" xml:space="preserve">
    <value>Issued</value>
  </data>
  <data name="invoiceCard_Due" xml:space="preserve">
    <value>Due</value>
  </data>
  <data name="invoiceCard_Service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="invoiceCard_Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="invoiceCard_Task" xml:space="preserve">
    <value>Task</value>
  </data>
  <data name="invoiceCard_Expenses" xml:space="preserve">
    <value>Expenses </value>
  </data>
  <data name="invoiceCard_NoCosts" xml:space="preserve">
    <value>No Costs</value>
  </data>
  <data name="invoiceCard_FinancialSummary" xml:space="preserve">
    <value>Financial Summary</value>
  </data>
  <data name="invoiceCard_ItemsTotal" xml:space="preserve">
    <value>Items Total</value>
  </data>
  <data name="invoiceCard_ProfitMargin" xml:space="preserve">
    <value>Profit Margin</value>
  </data>
  <data name="invoiceCard_EditInvoice" xml:space="preserve">
    <value>Edit Invoice</value>
  </data>
  <data name="invoiceCard_ManageItems" xml:space="preserve">
    <value>Manage Items</value>
  </data>
  <data name="invoiceCard_ManageFiles" xml:space="preserve">
    <value>Manage Files</value>
  </data>
  <data name="invoiceCard_DeleteInvoice" xml:space="preserve">
    <value>Delete Invoice</value>
  </data>
  <data name="invoiceCard_ExportToExcel" xml:space="preserve">
    <value>Export to Excel</value>
  </data>
  <data name="invoiceCard_PreviewExportPDF" xml:space="preserve">
    <value>Preview &amp; Export PDF</value>
  </data>
  <data name="invoiceCard_Overdue" xml:space="preserve">
    <value>Overdue</value>
  </data>
  <data name="invoiceCard_DueSoon" xml:space="preserve">
    <value>Due Soon</value>
  </data>
  <data name="invoiceCard_Current" xml:space="preserve">
    <value>Current</value>
  </data>
  <data name="clientCard_Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="clientCard_Individual" xml:space="preserve">
    <value>Individual</value>
  </data>
  <data name="clientCard_Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="clientCard_Jobs" xml:space="preserve">
    <value>Jobs</value>
  </data>
  <data name="clientCard_EditClient" xml:space="preserve">
    <value>Edit Client</value>
  </data>
  <data name="clientCard_DeleteClient" xml:space="preserve">
    <value>Delete Client</value>
  </data>
  <data name="general_Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="general_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="general_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="general_Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="general_Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="dialog_AddEditClient" xml:space="preserve">
    <value>Add/Edit Client</value>
  </data>
  <data name="validation_CompanyNameRequired" xml:space="preserve">
    <value>Company name is required</value>
  </data>
  <data name="validation_CompanyNameRequiredForCompany" xml:space="preserve">
    <value>Company name is required for company clients.</value>
  </data>
  <data name="validation_FirstNameRequired" xml:space="preserve">
    <value>First name is required</value>
  </data>
  <data name="validation_FirstNameRequiredForIndividual" xml:space="preserve">
    <value>First name is required for individual clients.</value>
  </data>
  <data name="validation_LastNameRequired" xml:space="preserve">
    <value>Last name is required</value>
  </data>
  <data name="validation_LastNameRequiredForIndividual" xml:space="preserve">
    <value>Last name is required for individual clients.</value>
  </data>
  <data name="validation_PhoneNumberRequired" xml:space="preserve">
    <value>Phone number is required</value>
  </data>
  <data name="validation_InvalidEmailFormat" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="validation_InvalidGermanPhoneFormat" xml:space="preserve">
    <value>Invalid German phone number format.</value>
  </data>
</root>